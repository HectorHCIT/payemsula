# Script de pruebas para reCAPTCHA Enterprise v3
# Este script ayuda a documentar y monitorear las pruebas de reCAPTCHA

Write-Host "üõ°Ô∏è Sistema de Pruebas para reCAPTCHA Enterprise v3" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green
Write-Host ""

Write-Host "üìã ESCENARIOS DE PRUEBA DISPONIBLES:" -ForegroundColor Yellow
Write-Host "1. ‚úÖ B√∫squeda Normal - Simula una b√∫squeda de cuenta leg√≠tima"
Write-Host "2. ‚úÖ Pago Normal - Simula un procesamiento de pago leg√≠timo"
Write-Host "3. üö® Simular Bot - Env√≠a patrones sospechosos para activar detecci√≥n anti-bot"
Write-Host "4. ü§ñ Bot Pago - Simula comportamiento automatizado en el pago"
Write-Host "5. ‚ö° Prueba de Estr√©s - Ejecuta m√∫ltiples acciones r√°pidamente"
Write-Host ""

Write-Host "üîß CONFIGURACI√ìN ACTUAL:" -ForegroundColor Cyan
Write-Host "- Entorno: DESARROLLO (simulaci√≥n habilitada)"
Write-Host "- Site Key: $env:NEXT_PUBLIC_RECAPTCHA_SITE_KEY"
Write-Host "- Project ID: $env:RECAPTCHA_PROJECT_ID"
Write-Host "- Umbral de Score: $env:RECAPTCHA_SCORE_THRESHOLD"
Write-Host ""

Write-Host "üì± C√ìMO PROBAR:" -ForegroundColor Magenta
Write-Host "1. Abre http://localhost:3000/pago en tu navegador"
Write-Host "2. Busca el panel 'reCAPTCHA Testing Panel' en la esquina inferior izquierda"
Write-Host "3. Haz clic en los botones para probar diferentes escenarios"
Write-Host "4. Observa los resultados en el panel y en esta consola"
Write-Host ""

Write-Host "üîç MONITOREAR LOGS:" -ForegroundColor Blue
Write-Host "- Los logs del cliente aparecen en la consola del navegador (F12)"
Write-Host "- Los logs del servidor aparecen en esta terminal"
Write-Host "- Busca los emojis para identificar f√°cilmente los eventos:"
Write-Host "  üõ°Ô∏è = Ejecuci√≥n de reCAPTCHA"
Write-Host "  üîç = Verificaci√≥n del servidor"
Write-Host "  ‚úÖ = √âxito"
Write-Host "  ‚ùå = Error"
Write-Host "  üß™ = Simulaci√≥n en desarrollo"
Write-Host ""

Write-Host "‚ö†Ô∏è CASOS DE ERROR ESPERADOS:" -ForegroundColor Red
Write-Host "- Si reCAPTCHA no est√° cargado: mensaje 'reCAPTCHA not available'"
Write-Host "- Si simulas comportamiento bot: score bajo y verification failed"
Write-Host "- En desarrollo: fallback a simulaci√≥n autom√°tica si hay problemas"
Write-Host ""

Write-Host "‚úÖ SISTEMA ACTUALIZADO - INTEGRACI√ìN CON BACKEND .NET" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green
Write-Host ""

Write-Host "üéØ CONFIGURACI√ìN ACTUAL:" -ForegroundColor Cyan
Write-Host "   Frontend: http://localhost:3000" -ForegroundColor Gray
Write-Host "   API Local: http://localhost:3000/api/verify-captcha (fallback)" -ForegroundColor Gray
Write-Host "   Backend .NET: https://api.emsula.com/recaptcha/verify (principal)" -ForegroundColor Gray
Write-Host ""

Write-Host "üìä ESTADO DEL SISTEMA:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Hook simplificado para conectar al backend .NET" -ForegroundColor Green
Write-Host "   ‚úÖ Fallback autom√°tico a API local en desarrollo" -ForegroundColor Green
Write-Host "   ‚úÖ Documentaci√≥n completa para equipo de backend" -ForegroundColor Green
Write-Host "   üîÑ Esperando implementaci√≥n del endpoint .NET" -ForegroundColor Yellow
Write-Host ""

Write-Host "üìö DOCUMENTACI√ìN PARA BACKEND:" -ForegroundColor Cyan
Write-Host "   üìÅ README-BACKEND-DOTNET-FINAL.md - Gu√≠a completa" -ForegroundColor Gray
Write-Host "   üìÅ RECAPTCHA-STATUS.md - Estado actual del proyecto" -ForegroundColor Gray
Write-Host ""

Write-Host "üß™ TESTING:" -ForegroundColor Cyan
Write-Host "   Panel visible en: http://localhost:3000/pago (desarrollo)" -ForegroundColor Gray
Write-Host "   Logs en consola del navegador (F12)" -ForegroundColor Gray
Write-Host "   Simulaci√≥n autom√°tica si backend no responde" -ForegroundColor Gray
Write-Host ""

Write-Host "üöÄ Presiona Ctrl+C para detener el monitoreo" -ForegroundColor Green
Write-Host "Iniciando monitoreo de logs..." -ForegroundColor Green

# Mantener el script ejecut√°ndose para mostrar informaci√≥n
while ($true) {
    Start-Sleep -Seconds 30
    Write-Host "‚è∞ $(Get-Date -Format 'HH:mm:ss') - Sistema activo. Realiza pruebas en el navegador..." -ForegroundColor Gray
}
